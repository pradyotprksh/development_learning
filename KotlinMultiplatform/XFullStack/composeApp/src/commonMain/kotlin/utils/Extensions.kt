package utils

import androidx.compose.ui.input.key.Key

fun Key.getDisplaySymbol() = when (this) {
    Key.Spacebar -> "_"
    Key.Enter -> "⏎"
    Key.Backspace -> "⌫"
    Key.Tab -> "⇥"
    Key.Escape -> "⎋"
    Key.CapsLock -> "⇪"
    Key.ShiftLeft, Key.ShiftRight -> "⇧"
    Key.CtrlLeft, Key.CtrlRight -> "^"
    Key.AltLeft, Key.AltRight -> "⎇"
    Key.MetaLeft, Key.MetaRight -> "⌘"
    Key.DirectionUp -> "↑"
    Key.DirectionDown -> "↓"
    Key.DirectionLeft -> "←"
    Key.DirectionRight -> "→"
    Key.Delete -> "⌦"
    else -> null
}

fun Key.getDisplayName() = when (this) {
    Key.Home -> "Home"
    Key.Insert -> "Insert"
    Key.Delete -> "Delete"
    Key.PageUp -> "Page Up"
    Key.PageDown -> "Page Down"
    Key.Escape -> "Escape"
    Key.Enter -> "Enter"
    Key.Tab -> "Tab"
    Key.Backspace -> "Backspace"
    Key.Spacebar -> "Space"
    Key.CapsLock -> "Caps Lock"
    Key.NumLock -> "Num Lock"
    Key.ScrollLock -> "Scroll Lock"
    Key.ShiftLeft -> "Left Shift"
    Key.ShiftRight -> "Right Shift"
    Key.CtrlLeft -> "Left Ctrl"
    Key.CtrlRight -> "Right Ctrl"
    Key.AltLeft -> "Left Alt"
    Key.AltRight -> "Right Alt"
    Key.MetaLeft -> "Left Meta"
    Key.MetaRight -> "Right Meta"
    Key.Menu -> "Menu"
    Key.DirectionUp -> "Arrow Up"
    Key.DirectionDown -> "Arrow Down"
    Key.DirectionLeft -> "Arrow Left"
    Key.DirectionRight -> "Arrow Right"
    Key.NumPad0 -> "NumPad 0"
    Key.NumPad1 -> "NumPad 1"
    Key.NumPad2 -> "NumPad 2"
    Key.NumPad3 -> "NumPad 3"
    Key.NumPad4 -> "NumPad 4"
    Key.NumPad5 -> "NumPad 5"
    Key.NumPad6 -> "NumPad 6"
    Key.NumPad7 -> "NumPad 7"
    Key.NumPad8 -> "NumPad 8"
    Key.NumPad9 -> "NumPad 9"
    Key.NumPadDivide -> "NumPad Divide"
    Key.NumPadMultiply -> "NumPad Multiply"
    Key.NumPadSubtract -> "NumPad Subtract"
    Key.NumPadAdd -> "NumPad Add"
    Key.NumPadEnter -> "NumPad Enter"
    Key.NumPadEquals -> "NumPad Equals"
    Key.NumPadLeftParenthesis -> "NumPad Left Parenthesis"
    Key.NumPadRightParenthesis -> "NumPad Right Parenthesis"
    Key.A -> "A"
    Key.B -> "B"
    Key.C -> "C"
    Key.D -> "D"
    Key.E -> "E"
    Key.F -> "F"
    Key.G -> "G"
    Key.H -> "H"
    Key.I -> "I"
    Key.J -> "J"
    Key.K -> "K"
    Key.L -> "L"
    Key.M -> "M"
    Key.N -> "N"
    Key.O -> "O"
    Key.P -> "P"
    Key.Q -> "Q"
    Key.R -> "R"
    Key.S -> "S"
    Key.T -> "T"
    Key.U -> "U"
    Key.V -> "V"
    Key.W -> "W"
    Key.X -> "X"
    Key.Y -> "Y"
    Key.Z -> "Z"
    Key.Zero -> "0"
    Key.One -> "1"
    Key.Two -> "2"
    Key.Three -> "3"
    Key.Four -> "4"
    Key.Five -> "5"
    Key.Six -> "6"
    Key.Seven -> "7"
    Key.Eight -> "8"
    Key.Nine -> "9"
    Key.F1 -> "F1"
    Key.F2 -> "F2"
    Key.F3 -> "F3"
    Key.F4 -> "F4"
    Key.F5 -> "F5"
    Key.F6 -> "F6"
    Key.F7 -> "F7"
    Key.F8 -> "F8"
    Key.F9 -> "F9"
    Key.F10 -> "F10"
    Key.F11 -> "F11"
    Key.F12 -> "F12"
    Key.Semicolon -> "Semicolon"
    Key.Equals -> "Equal"
    Key.Comma -> "Comma"
    Key.Minus -> "Minus"
    Key.Period -> "Period"
    Key.Slash -> "Slash"
    Key.LeftBracket -> "Left Bracket"
    Key.Backslash -> "Backslash"
    Key.RightBracket -> "Right Bracket"
    Key.Apostrophe -> "Apostrophe"
    else -> null
}

inline fun <reified T : Enum<T>> String.asEnumOrDefault(defaultValue: T? = null): T? =
    enumValues<T>().firstOrNull { it.name.equals(this, ignoreCase = true) } ?: defaultValue