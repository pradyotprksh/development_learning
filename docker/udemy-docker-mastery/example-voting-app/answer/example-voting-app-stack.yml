version: '3.9'
services:
  redis:
    image: redis
    healthcheck:
      test: ["CMD", "redis-healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
    configs:
      - source: redis-healthcheck
        target: /usr/local/bin/redis-healthcheck
        mode: 0555
    networks:
      - frontend
  db:
    image: postgres:9.6
    healthcheck:
      test: ["CMD", "postgres-healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
    configs:
      - source: postgres-healthcheck
        target: /usr/local/bin/postgres-healthcheck
        mode: 0555
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - backend
  vote:
    image: bretfisher/examplevotingapp_vote
    ports:
      - '5000:80'
    healthcheck: 
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      # in local compose this will cause an error because we 
      # hardcoded the port above to 5000 and unlike swarm,
      # compose can't LB a single port across two containers
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
    networks:
      - frontend
  result:
    image: bretfisher/examplevotingapp_result
    ports:
      - '5001:80'
    networks:
      - backend
  worker:
    image: bretfisher/examplevotingapp_worker
    networks:
      - frontend
      - backend
    deploy:
      replicas: 2

networks:
  frontend:
  backend:

volumes:
  db-data:

configs:
  redis-healthcheck:
    file: ./redis-healthcheck
  postgres-healthcheck:
    file: ./postgres-healthcheck
